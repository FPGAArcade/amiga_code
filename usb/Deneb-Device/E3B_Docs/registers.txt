D4 memory map and register description
======================================

REV 01 (26.06.07) 0xd40e3b13

Memory map
----------

The D4 memory is divided into several regions, denoted by A[23:20]:

0x0 - register space
0x1 - USB host controller
0x2 - reserved
0x3 - reserved
0x4 - reserved
0x5 - reserved
0x6 - reserved
0x7 - reserved
0x8 - reserved
0x9 - reserved
0xa - reserved
0xb - reserved
0xc - reserved
0xd - reserved
0xe - reserved
0xf - reserved

USB host controller
-------------------

Accesses to this region are handled differently depending on the address used.
If accessing the register space of ISP1760 (0x0000 - 0x0ffc), Zorro data is 
directly passed to the ISP, mapping all register bits as described in the data sheet.

In contrast, all accesses to the memory region (0x1000 - 0xfffc) are byte swapped to
get the correct endianess of USB data. 

DMA will always use byte swapping, as it will access the memory banks of the ISP1760.

This byte swapping is done completely automatically, and can't be changed by software.

Register space
--------------

The register space is divded into sixteen different registers by A[19:16].

0x0 - DMA_MEMORY  - ro 
0x1 - DMA_ADDRESS - rw
0x2 - DMA_CTRL    - rw
0x3 - 
0x4 - reserved (second DMA controller)
0x5 - reserved (second DMA controller)
0x6 - reserved (second DMA controller)
0x7 - reserved (second DMA controller)
0x8 - LC_DATA     - ro
0x9 - 
0xa - 
0xb - 
0xc - DMA_INT     - rwc
0xd - LC_CTRL     - rw
0xe - USB_CTRL    - rw
0xf - TEST_CTRL   - rw

USB_CTRL 
--------

 3 - DMA_INT_ENA - 0 -> DMA int disabled, 1 -> DMA int enabled
 2 - USB_RESET   - 0 -> normal operation, 1 -> USB reset
 1 - USB_INT_ENA - 0 -> slave int disabled, 1 -> slave int enabled
 0 - USB_INT_SEL - 0 -> /INT6, 1 -> /INT2
 
DMA_MEMORY
----------

 31 - 18 - DMA length [32bit words]
      17 - reserved (DMA int)
      16 - reserved (DMA done)
 15 -  0 - ISP address used for DMA accesses
 
DMA_ADDRESS
-----------
 
 31 -  2 - Zorro III DMA address 
       1 - data direction - 0 -> ISP->ZORRO, 1 -> ZORRO->ISP
       0 - DMA enable     - 0 -> DMA disabled, 1 -> DMA enabled

Remark: Bit 0 ("DMA enable") can only be set if a non-zero value for "DMA length" has been written to DMA_MEMORY.
        This is not a bug, but a security feature.

Remark: Bit 0 ("DMA enable") will be cleared automatically if the DMA transfer has been executed 
        (i.e. if "DMA done" is set).
        You may, of course, terminate a running DMA transfer by setting "DMA enable" to zero by hand.

DMA_CTRL
----------

29 - 24 - TICKS       - number of ticks (4x E7M) between unregister und register pulses (/BRn)
23 - 16 - BLOCK       - number of data word per DMA block, 0 => 1, ...., 255 => 256
15 -  3 - reserved
      2 - HOGGER      - 0 -> disable /LOCK, 1 -> enable /LOCK (no reschedules in Buster, bus hogging)
      1 - reserved
      0 - reserved

Recommended setting for this register is 0x01ff0000.

Remark: do NOT use HOGGER feature. It seems to lock the machine.

Remark: Setting TICK to zero and REGRANT to one will give a unregister / register sequence as described in 
        Zorro III spec as minimum timing between two /BRn pulses. 

DMA_INT
----------

31 -  2 - reserved
      1 - ISP int (0 = no int, 1 = int)
      0 - DMA int (0 = no int, 1 = int)

Remark: only bit 0 ("DMA_INT") can be cleared by writing '1'. 
        Bit 1 ("ISP_INT") must be cleared by ISP interrupt registers.

